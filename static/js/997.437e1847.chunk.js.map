{"version":3,"file":"static/js/997.437e1847.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://goit-react-hw-08-phonebook/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"sectionHead\":\"Section_sectionHead__RIQNp\"};","import styles from './Section.module.css';\nimport React from 'react';\n\nconst Section = ({ title, children }) => {\n  const { sectionHead } = styles;\n\n  return (\n    <section>\n      <h2 className={sectionHead}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactForm__field\":\"ContactForm_contactForm__field__+cOPR\",\"contactLabel\":\"ContactForm_contactLabel__vt5it\",\"contactInput\":\"ContactForm_contactInput__z6XOX\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nexport const Button = ({ type,title, onClick }) => {\n  const { button } = styles;\n\n  return (\n    <button className={button} onClick={onClick} type={type}>\n      {title}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  type: PropTypes.string\n};\n","import styles from './ContactForm.module.css';\nimport { Button } from 'components/Button/Button';\nimport React from 'react';\nimport { useGetContactsQuery, useAddContactMutation } from 'services/contactsApi';\n\nconst ContactForm = () => {\n  const { contactForm, contactForm__field, contactLabel, contactInput } = styles;\n\n  const { data: contacts = [] } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    if (contacts.some(contact => contact.phone === number)) {\n      const [filteredNumber] = contacts.filter(\n        contact => contact.phone === number\n      );\n      alert(`${number} is already in contact with ${filteredNumber.name} `);\n      return;\n    }\n\n    try {\n      await addContact({\n        name,\n        phone: number,\n      });\n    } catch (error) {\n      alert(`Failed to save the contact`);\n    }\n    form.reset();\n  };\n\n  return (\n    <form className={contactForm} onSubmit={onSubmit}>\n      <div className={contactForm__field}>\n        <label htmlFor=\"contactName\" className={contactLabel}>\n          Name\n        </label>\n        <input\n          className={contactInput}\n          id=\"contactName\"\n          type=\"text\"\n          name=\"name\"\n          placeholder='Enter name...'\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={contactForm__field}>\n        <label htmlFor=\"contactTel\" className={contactLabel}>\n          Phone number\n        </label>\n        <input\n          className={contactInput}\n          id=\"contactTel\"\n          type=\"tel\"\n          name=\"number\"\n          placeholder='Enter number...'\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <Button\n        type=\"submit\"\n        title={isLoading ? 'ADDING...' : 'ADD CONTACT'}\n      ></Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList__wrapper\":\"ContactList_contactList__wrapper__2bWuN\",\"contactList__text\":\"ContactList_contactList__text__mjpGs\",\"contactList__button\":\"ContactList_contactList__button__6ARfg\"};","// extracted by mini-css-extract-plugin\nexport default {\"notif__msg\":\"Notification_notif__msg__Bv6Zf\"};","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nexport const Notification = ({ message }) => {\n  const { notif__msg } = styles;\n\n  return <p className={notif__msg}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Loader_item__iys6Z\"};","import React from 'react';\nimport { RotatingTriangles } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  const { item } = styles;\n  \n  return (\n    <div className={item}>\n      <RotatingTriangles\n          visible={true}\n          height=\"150\"\n          width=\"150\"\n          ariaLabel=\"rotating-triangle-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          colors={['#1B5299', '#EF8354', '#DB5461']}\n        />\n    </div>\n  );\n};\n\nexport default Loader;","import styles from './ContactList.module.css';\nimport { Notification } from 'components/Notification/Notification';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Loader from 'components/Loader/Loader';\nimport { useGetContactsQuery, useDeleteContactMutation } from 'services/contactsApi';\n\nconst ContactList = () => {\n  const { contactList__wrapper, contactList__text, contactList__button } = styles;\n\n  const {\n    data: contacts = [],\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetContactsQuery();\n\n  const filter = useSelector(state => state.filter);\n  const [deleteItemContact] = useDeleteContactMutation();\n\n  const filteredContacts = useMemo(() => {\n    return contacts.filter(c => c.name.toLowerCase().includes(filter));\n  }, [contacts, filter]);\n\n  let content;\n\n  if (isLoading) {\n    content = <Loader />;\n  } else if (isSuccess) {\n    filteredContacts.length !== 0\n      ? (content = (\n          <ul className={contactList__wrapper}>\n            {filteredContacts.map(contact => {\n              return (\n                <li className={contactList__text} key={nanoid()}>\n                  <span>\n                    {`${contact.name}:\n               ${contact.phone}`}\n                  </span>\n                  <button\n                    type=\"button\"\n                    className={contactList__button}\n                    onClick={() => deleteItemContact({ id: contact.id })}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ))\n      : (content = <Notification message=\"Your phonebook is empty\" />);\n  } else if (isError) {\n    content = <Notification message={error} />;\n  }\n\n  return <>{content}</>;\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterField\":\"Filter_filterField__hjFfe\",\"filterText\":\"Filter_filterText__QGy-k\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import styles from './Filter.module.css';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/slices/filterSlice';\n\n\nconst Filter = () => {\n  const { filterField, filterText, filterInput } = styles;\n\n  const dispatch = useDispatch();\n\n  const filterValue = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={filterField}>\n      <p className={filterText}>Find contact by name</p>\n      <input className={filterInput} type=\"text\" onChange={filterValue} />\n    </div>\n  );\n};\n\nexport default Filter;\n","\nimport Section from '../../components/Section/Section';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport React from 'react';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["title","children","sectionHead","styles","className","Button","type","onClick","button","contactForm","contactForm__field","contactLabel","contactInput","useGetContactsQuery","data","contacts","useAddContactMutation","addContact","isLoading","onSubmit","e","preventDefault","form","target","name","value","number","some","contact","alert","phone","filter","filteredNumber","reset","htmlFor","id","placeholder","pattern","required","Notification","message","notif__msg","item","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","content","contactList__wrapper","contactList__text","contactList__button","isSuccess","isError","error","useSelector","state","useDeleteContactMutation","deleteItemContact","filteredContacts","useMemo","c","toLowerCase","includes","length","map","nanoid","filterField","filterText","filterInput","dispatch","useDispatch","onChange","setFilter"],"sourceRoot":""}